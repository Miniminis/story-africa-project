<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 이 부분에 설정한 파일들은 사용자 요청이 아니라 해당 파일 형식 그대로 사용하겠다!  -->
	<resources mapping="/uploadedfile/**" location="/uploadedfile/" />
	<resources mapping="/static/**" location="/static/" />
	<resources mapping="/image/**" location="/image/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 파일업로드 처리를 위한 multipartResolver bean 등록 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding">
			<beans:value>utf-8</beans:value>
		</beans:property>
	</beans:bean>
	
	<!-- 여러개의 인터셉터를 등록! -->
	<interceptors>
		<!-- 로그인 auth check 을 위한 인터셉터 구현 클래스 등록 -->
		<interceptor>
			<mapping path="/member/mypage/**"/> <!-- 마이페이지는 로그인 사용자만 볼 수 있게  -->
			<!-- <exclude-mapping path="/member/mypage/help/**"/> -->
			<beans:bean class="com.storyafrica.sa.intercepter.AuthCheckInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/member/memberlist/**"/> <!-- 리스트는 관리자만 볼 수 있게  -->
			<beans:bean class="com.storyafrica.sa.intercepter.AuthCheckInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 스프링 통해 자동메일 보내기 위한 bean 객체 등록  -->
	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<beans:property name="host" value="smtp.gmail.com" />
	<beans:property name="port" value="587" /><!-- 465 or 25-->
	<beans:property name="username" value="miniTest1229@gmail.com" />
	<beans:property name="password" value="test12291229" />
	<beans:property name="defaultEncoding" value="utf-8" />
	<beans:property name="javaMailProperties">
		<beans:props>
			<beans:prop key="mail.transport.protocol">smtp</beans:prop>
			<beans:prop key="mail.smtp.auth">true</beans:prop>
			<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
			<beans:prop key="mail.debug">true</beans:prop>
		</beans:props>
	</beans:property>
	</beans:bean>
	
	<!-- 암호화 -->
	<beans:bean id="bcryptPasswordEncoder" 
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- 암호화 AES256Util -->   
   <beans:bean id = "AES256Util" 
            class = "com.storyafrica.sa.member.controller.AES256Util">
      <beans:constructor-arg>
         <beans:value>1111111111111111</beans:value>
      </beans:constructor-arg>         
   </beans:bean>
	
	<context:component-scan base-package="com.storyafrica.sa" />	
	
</beans:beans>
